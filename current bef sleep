import tkinter as tk
from tkinter import messagebox
import csv
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from PIL import Image, ImageTk
import pyttsx3

data = pd.read_csv('flexxx.csv')
features = data.iloc[:, :-2]
labels = data.iloc[:, -1]
X_train, X_test, y_train, y_test = train_test_split(features, labels, test_size=0.2, random_state=42)
classifier = RandomForestClassifier()
classifier.fit(X_train, y_train)
def previous():
    window.deiconify()
    new_window.withdraw()



def openwindow(prediction):
    print(f"Prediction1: {prediction}")
    if prediction == "come here":
        openroot()

def openroot():
    def update_gif(frame_index):
        frame = gif_frames[frame_index]
        gif_label.config(image=frame)
        root.after(100, update_gif, (frame_index + 1) % frames)

    def speak_text(text):
        engine.say(text)
        engine.runAndWait()

    def slider():
        nonlocal count, text
        if count >= len(txt):
            count = -1
            text = ''
            text_label.config(text=text)
        else:
            text = text + txt[count]
            text_label.config(text=text)
            if txt[count] == ' ' or count == len(txt) - 1:
                speak_text(text.strip())
                text = ''
        count = count + 1
        text_label.after(100, slider)

    new_window.deiconify()
    window.withdraw()
    background_image = ImageTk.PhotoImage(Image.open("20230610_143434_0000 (2).jpg"))

    background_label = tk.Label(new_window, image=background_image)
    background_label.place(x=0, y=0, relwidth=1, relheight=1)

    txt = "Come Here!!!!"
    count = 0
    text = ''

    text_label = tk.Label(new_window, text=txt, font=('Arial', 30, "bold"), fg='black', bg='white')
    text_label.pack(pady=(200, 50))

    gif_frames = []
    gif_image = Image.open("cat-cute (1).gif")
    frames = gif_image.n_frames

    for i in range(frames):
        gif_image.seek(i)
        frame = ImageTk.PhotoImage(gif_image)
        gif_frames.append(frame)

    gif_label = tk.Label(new_window)
    gif_label.pack(pady=50)

    engine = pyttsx3.init()
    engine.setProperty('rate', 300)

    slider()
    update_gif(0)

def get_most_recent_data():
    with open('flexxx.csv', 'r') as file:
        reader = csv.reader(file)
        data = list(reader)
        most_recent_row = data[-1]
        most_recent_sum = most_recent_row[:-2]
        print(f"Most recent sum: {most_recent_sum}")
        prediction2 = classifier.predict(np.array(most_recent_sum).reshape(1, -1))
        print(f"Prediction2: {prediction2}")
        random_input = np.array([91, 100, 0]).reshape(1, -1)
        prediction1 = classifier.predict(random_input)
        openwindow(prediction1)

window = tk.Tk()
window.geometry("1450x975")
window.title("Project")

button = tk.Button(window, text="Predict", command=get_most_recent_data)
button.pack()

new_window = tk.Toplevel()
new_window.geometry("1450x975")
new_window.title("come here")
btn2=tk.Button(new_window,text="Previous",command=previous,relief='sunken')
btn2.pack(padx=10, pady=10)

window.mainloop()
